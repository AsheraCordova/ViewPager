//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidXJViewPager\src\main\java\androidx\viewpager\widget\PagerAdapter.java
//

#include "DataSetObservable.h"
#include "DataSetObserver.h"
#include "J2ObjC_source.h"
#include "PagerAdapter.h"
#include "Parcelable.h"
#include "View.h"
#include "ViewGroup.h"
#include "java/lang/CharSequence.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/UnsupportedOperationException.h"


@interface ADXPagerAdapter () {
 @public
  ADDataSetObservable *mObservable_;
  ADDataSetObserver *mViewPagerObserver_;
}

@end

J2OBJC_FIELD_SETTER(ADXPagerAdapter, mObservable_, ADDataSetObservable *)
J2OBJC_FIELD_SETTER(ADXPagerAdapter, mViewPagerObserver_, ADDataSetObserver *)

@implementation ADXPagerAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXPagerAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)getCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)startUpdateWithADViewGroup:(ADViewGroup *)container {
  [self startUpdateWithADView:container];
}

- (id)instantiateItemWithADViewGroup:(ADViewGroup *)container
                             withInt:(jint)position {
  return [self instantiateItemWithADView:container withInt:position];
}

- (void)destroyItemWithADViewGroup:(ADViewGroup *)container
                           withInt:(jint)position
                            withId:(id)object {
  [self destroyItemWithADView:container withInt:position withId:object];
}

- (void)setPrimaryItemWithADViewGroup:(ADViewGroup *)container
                              withInt:(jint)position
                               withId:(id)object {
  [self setPrimaryItemWithADView:container withInt:position withId:object];
}

- (void)finishUpdateWithADViewGroup:(ADViewGroup *)container {
  [self finishUpdateWithADView:container];
}

- (void)startUpdateWithADView:(ADView *)container {
}

- (id)instantiateItemWithADView:(ADView *)container
                        withInt:(jint)position {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Required method instantiateItem was not overridden");
}

- (void)destroyItemWithADView:(ADView *)container
                      withInt:(jint)position
                       withId:(id)object {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Required method destroyItem was not overridden");
}

- (void)setPrimaryItemWithADView:(ADView *)container
                         withInt:(jint)position
                          withId:(id)object {
}

- (void)finishUpdateWithADView:(ADView *)container {
}

- (jboolean)isViewFromObjectWithADView:(ADView *)view
                                withId:(id)object {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<ADParcelable>)saveState {
  return nil;
}

- (void)restoreStateWithADParcelable:(id<ADParcelable>)state
             withJavaLangClassLoader:(JavaLangClassLoader *)loader {
}

- (jint)getItemPositionWithId:(id)object {
  return ADXPagerAdapter_POSITION_UNCHANGED;
}

- (void)notifyDataSetChanged {
  @synchronized(self) {
    if (mViewPagerObserver_ != nil) {
      [mViewPagerObserver_ onChanged];
    }
  }
  [((ADDataSetObservable *) nil_chk(mObservable_)) notifyChanged];
}

- (void)registerDataSetObserverWithADDataSetObserver:(ADDataSetObserver *)observer {
  [((ADDataSetObservable *) nil_chk(mObservable_)) registerObserverWithId:observer];
}

- (void)unregisterDataSetObserverWithADDataSetObserver:(ADDataSetObserver *)observer {
  [((ADDataSetObservable *) nil_chk(mObservable_)) unregisterObserverWithId:observer];
}

- (void)setViewPagerObserverWithADDataSetObserver:(ADDataSetObserver *)observer {
  @synchronized(self) {
    JreStrongAssign(&mViewPagerObserver_, observer);
  }
}

- (id<JavaLangCharSequence>)getPageTitleWithInt:(jint)position {
  return nil;
}

- (jfloat)getPageWidthWithInt:(jint)position {
  return 1.f;
}

- (void)dealloc {
  RELEASE_(mObservable_);
  RELEASE_(mViewPagerObserver_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 11, 12, -1, -1, -1, -1 },
    { NULL, "LADParcelable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 20, 18, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 23, 22, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCount);
  methods[2].selector = @selector(startUpdateWithADViewGroup:);
  methods[3].selector = @selector(instantiateItemWithADViewGroup:withInt:);
  methods[4].selector = @selector(destroyItemWithADViewGroup:withInt:withId:);
  methods[5].selector = @selector(setPrimaryItemWithADViewGroup:withInt:withId:);
  methods[6].selector = @selector(finishUpdateWithADViewGroup:);
  methods[7].selector = @selector(startUpdateWithADView:);
  methods[8].selector = @selector(instantiateItemWithADView:withInt:);
  methods[9].selector = @selector(destroyItemWithADView:withInt:withId:);
  methods[10].selector = @selector(setPrimaryItemWithADView:withInt:withId:);
  methods[11].selector = @selector(finishUpdateWithADView:);
  methods[12].selector = @selector(isViewFromObjectWithADView:withId:);
  methods[13].selector = @selector(saveState);
  methods[14].selector = @selector(restoreStateWithADParcelable:withJavaLangClassLoader:);
  methods[15].selector = @selector(getItemPositionWithId:);
  methods[16].selector = @selector(notifyDataSetChanged);
  methods[17].selector = @selector(registerDataSetObserverWithADDataSetObserver:);
  methods[18].selector = @selector(unregisterDataSetObserverWithADDataSetObserver:);
  methods[19].selector = @selector(setViewPagerObserverWithADDataSetObserver:);
  methods[20].selector = @selector(getPageTitleWithInt:);
  methods[21].selector = @selector(getPageWidthWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mObservable_", "LADDataSetObservable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mViewPagerObserver_", "LADDataSetObserver;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "POSITION_UNCHANGED", "I", .constantValue.asInt = ADXPagerAdapter_POSITION_UNCHANGED, 0x19, -1, -1, -1, -1 },
    { "POSITION_NONE", "I", .constantValue.asInt = ADXPagerAdapter_POSITION_NONE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "startUpdate", "LADViewGroup;", "instantiateItem", "LADViewGroup;I", "destroyItem", "LADViewGroup;ILNSObject;", "setPrimaryItem", "finishUpdate", "LADView;", "LADView;I", "LADView;ILNSObject;", "isViewFromObject", "LADView;LNSObject;", "restoreState", "LADParcelable;LJavaLangClassLoader;", "getItemPosition", "LNSObject;", "registerDataSetObserver", "LADDataSetObserver;", "unregisterDataSetObserver", "setViewPagerObserver", "getPageTitle", "I", "getPageWidth" };
  static const J2ObjcClassInfo _ADXPagerAdapter = { "PagerAdapter", "androidx.viewpager.widget", ptrTable, methods, fields, 7, 0x401, 22, 4, -1, -1, -1, -1, -1 };
  return &_ADXPagerAdapter;
}

@end

void ADXPagerAdapter_init(ADXPagerAdapter *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mObservable_, new_ADDataSetObservable_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXPagerAdapter)
